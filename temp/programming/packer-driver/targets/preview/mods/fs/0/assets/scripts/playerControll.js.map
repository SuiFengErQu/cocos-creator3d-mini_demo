{"version":3,"sources":["file:///D:/CocosProject/testDemo/cocos3d20211013/20211014/demolist2/assets/scripts/playerControll.ts"],"names":["_decorator","Component","Node","systemEvent","SystemEvent","KeyCode","quat","math","SkeletalAnimation","Vec3","Camera","ccclass","property","PlayerControll","start","on","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyup","event","ang","rotation1","rotation2","keyCode","KEY_W","console","log","KEY_A","KEY_S","KEY_D","move","ro","Quat","rotateY","node","rotation","slerp","update","deltaTime","getComponent","play","translate","forward","ve","uiHp","parent","getWorldPosition","ca","camera","convertToUINode","hp3D","worldPosition","setPosition","dis","distance","scale"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, systemEvent, EventKeyboard, SystemEvent, KeyCode, quat, math, SkeletalAnimation, Vec3, Camera } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = PlayerControll\n * DateTime = Thu Oct 28 2021 19:09:09 GMT+0800 (中国标准时间)\n * Author = fywxk\n * FileBasename = playerControll.ts\n * FileBasenameNoExtension = playerControll\n * URL = db://assets/scripts/playerControll.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n\n@ccclass('PlayerControll')\nexport class PlayerControll extends Component {\n    // [1]\n    // dummy = \n    @property(Node)\n    camera:Node = null;\n    @property(Node)\n    hp3D:Node = null;\n    @property(Node)\n    uiHp:Node = null;\n\n    move = false\n    start() {\n     \n        \n        systemEvent.on(SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        systemEvent.on(SystemEvent.EventType.KEY_UP, this.onKeyup, this);\n        // [3]\n    }\n    onKeyDown(event) {\n        let ang = -1000;\n        const rotation1 = quat();\n        const rotation2 = quat();\n    \n        switch (event.keyCode) {\n            case KeyCode.KEY_W:\n                console.log('Press a key');\n                ang = 180\n                break;\n            case KeyCode.KEY_A:\n                console.log('Press a key');\n                ang = -90\n                break;\n            case KeyCode.KEY_S:\n                console.log('Press a key');\n                ang = 90\n                break;\n            case KeyCode.KEY_D:\n                console.log('Press a key');\n                ang = 0\n                break;\n        }\n        if(ang!=-1000)\n        {\n            this.move = true;\n            let ro = math.Quat.rotateY(rotation1,rotation2,ang);\n            this.node.rotation = math.Quat.slerp(rotation1,rotation2,ro,0.5);\n        }\n        else\n        {\n            this.move = false;\n        }\n        \n    }\n    onKeyup()\n    {\n        this.move = false;\n    }\n    update (deltaTime: number) {\n        this.node.getComponent(SkeletalAnimation).play(\"cocos_anim_run\")\n        this.node.translate(this.node.forward,0);\n        // [4]\n        if(this.move)\n        {\n         \n            \n            // this.node.translate(this.node.forward,0);\n        }\n        else\n        {\n            // this.node.getComponent(SkeletalAnimation).play(\"cocos_anim_idle\")\n        }\n        let ve = new Vec3(0,0,0);\n        this.uiHp.parent.getWorldPosition(ve);\n        let ca = this.camera.getComponent(Camera);\n        ca.convertToUINode(this.hp3D.worldPosition,this.uiHp.parent,ve);\n        this.uiHp.setPosition(ve)\n        let dis = Vec3.distance(this.node.worldPosition,this.camera.worldPosition);\n        if(dis>10)\n        {\n            this.uiHp.scale =  new Vec3(0.021*(100/(dis-10)),0.021*(100/(dis-10)),0) ;\n        }\n        else\n        {\n            this.uiHp.scale =  new Vec3((20-dis)*0.01,(20-dis)*0.01,(50-dis)*0.01) ;\n        }\n\n\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}