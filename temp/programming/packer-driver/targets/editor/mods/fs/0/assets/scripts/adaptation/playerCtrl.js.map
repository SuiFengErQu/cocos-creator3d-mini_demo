{"version":3,"sources":["file:///D:/CocosProject/testDemo/cocos3d20211013/20211014/demolist2/assets/scripts/adaptation/playerCtrl.ts"],"names":["_decorator","Component","Node","CameraComponent","RenderTexture","Sprite","Vec3","view","sys","find","Widget","ccclass","property","PlayerCtrl","start","renderTex","render","cam","targetTexture","show3d","spriteFrame","texture","lateUpdate","player3dHps","forEach","item","i","ve1","worldToScreen","worldPosition","design","getDesignResolutionSize","canvasWidget","getComponent","offsetHeight","isMobile","getVisibleSize","width","height","uiHps","add","left"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;;;;;;OAC/F;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;4BAGaa,U,WADZF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAACT,eAAD,C,UAGRS,QAAQ,CAACR,aAAD,C,UAGRQ,QAAQ,CAACP,MAAD,C,UAGRO,QAAQ,CAAC,CAACV,IAAD,CAAD,C,UAERU,QAAQ,CAAC,CAACV,IAAD,CAAD,C,oCAbb,MACaW,UADb,SACgCZ,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAalB;AAEpBa,QAAAA,KAAK,GAAG;AACJ;AACA,gBAAMC,SAAS,GAAG,KAAKC,MAAvB;AACA,eAAKC,GAAL,CAASC,aAAT,GAAyBH,SAAzB;AACA,eAAKI,MAAL,CAAYC,WAAZ,CAAwBC,OAAxB,GAAkCN,SAAlC;AACH;;AAEDO,QAAAA,UAAU,GAAG;AACT;AACA,eAAKC,WAAL,CAAiBC,OAAjB,CAAyB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAClC;AACA,gBAAIC,GAAG,GAAG,IAAIrB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAV;AACA,iBAAKW,GAAL,CAASW,aAAT,CAAuBH,IAAI,CAACI,aAA5B,EAA2CF,GAA3C;AACA,gBAAIG,MAAM,GAAGvB,IAAI,CAACwB,uBAAL,EAAb,CAJkC,CAKlC;AACA;AACA;AACA;;AACA,gBAAIC,YAAY,GAAGvB,IAAI,CAAC,QAAD,CAAJ,CAAewB,YAAf,CAA4BvB,MAA5B,CAAnB;AACA,gBAAIwB,YAAY,GAAG,CAAC1B,GAAG,CAAC2B,QAAL,GAAc,CAAd,GAAmB5B,IAAI,CAAC6B,cAAL,GAAsBC,KAAtB,GAA4BP,MAAM,CAACQ,MAAnC,GAA0CR,MAAM,CAACO,KAAlD,GAAyD9B,IAAI,CAAC6B,cAAL,GAAsBE,MAApH,CAVkC,CAU0F;;AAC5H,iBAAKC,KAAL,CAAWb,CAAX,EAAcG,aAAd,GAA8BF,GAAG,CAACa,GAAJ,CAAQ,IAAIlC,IAAJ,CAAS0B,YAAY,CAACS,IAAtB,EAA2B,CAACP,YAAD,GAAc,CAAzC,EAA2C,CAA3C,CAAR,CAA9B;AAAqF;AACxF,WAZD,EAFS,CAiBT;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,SA/CqC,CAgDtC;AACA;AACA;;;AAlDsC,O;;;;;iBAEf,I;;;;;;;iBAGC,I;;;;;;;iBAGP,I;;;;;;;iBAGK,E;;;;;;;iBAEN,E;;;AAwCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, CameraComponent, RenderTexture, Sprite, Vec3, view, sys, find, Widget } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = PlayerCtrl\n * DateTime = Thu Nov 18 2021 15:42:27 GMT+0800 (中国标准时间)\n * Author = fywxk\n * FileBasename = playerCtrl.ts\n * FileBasenameNoExtension = playerCtrl\n * URL = db://assets/scripts/adaptation/playerCtrl.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n\n@ccclass('PlayerCtrl')\nexport class PlayerCtrl extends Component {\n    @property(CameraComponent)\n    cam: CameraComponent = null!;// 照射角色的相机\n\n    @property(RenderTexture)\n    render: RenderTexture = null!; // 渲染投射图\n\n    @property(Sprite)\n    show3d: Sprite = null!; //  显示投射的ui\n\n    @property([Node])\n    player3dHps: Node[] = []; // 所有角色3d血条位置\n    @property([Node])\n    uiHps: Node[] = []; // 所有血条ui\n\n    start() {\n        // 投影 吧3d照射的投影到2d ui上\n        const renderTex = this.render;\n        this.cam.targetTexture = renderTex;\n        this.show3d.spriteFrame.texture = renderTex;\n    }\n\n    lateUpdate() {\n        // 使用 worldToScreen 实现血条跟随\n        this.player3dHps.forEach((item, i) => {\n            // 血条\n            let ve1 = new Vec3(0, 0, 0)\n            this.cam.worldToScreen(item.worldPosition, ve1);\n            let design = view.getDesignResolutionSize();\n            // 这里就是计算一下  浏览器端屏幕是横屏的，实际我们canvas区域是中间手机屏，而且血条还不能加widget固定死，所有在pc端\n            // 转出来的坐标是实际屏幕算的，不是中间手机位置的，我们要计算到中间手机位置的区域，计算出的位置+屏幕左侧到手机屏的左侧的距离，就是中间手机的显示区域\n            // 这里计算offsetHeight，是因为手机端是适配宽度，不同机型的实际高度不一，可能血条高于正常值或者低于，所以在这里要-(根据设计分辨率求出的高度-实际屏幕的高度)/2\n            // 对于offsetHeight不理解，可以尝试在手机浏览器运行一下就明白了，和pc显示的差别\n            let canvasWidget = find(\"Canvas\").getComponent(Widget)\n            let offsetHeight = !sys.isMobile?0: ((view.getVisibleSize().width*design.height/design.width)-view.getVisibleSize().height);// 计算出高度比实际分辨率的差距，\n            this.uiHps[i].worldPosition = ve1.add(new Vec3(canvasWidget.left,-offsetHeight/2,0));;\n        })\n\n\n        // // 使用convertToUINode 实现血条跟随\n        // this.player3dHps.forEach((item, i) => {\n        //     // 血条\n        //     let ve1 = new Vec3(0, 0, 0)\n        //     this.cam.convertToUINode(new Vec3(item.worldPosition), this.uiHps[i].parent, ve1);\n        //     this.uiHps[i].setPosition(ve1)\n        // })\n\n    }\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}