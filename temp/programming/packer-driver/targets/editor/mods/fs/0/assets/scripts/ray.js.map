{"version":3,"sources":["file:///D:/CocosProject/testDemo/cocos3d20211013/20211014/demolist2/assets/scripts/ray.ts"],"names":["_decorator","Component","Node","ParticleSystem","systemEvent","SystemEvent","geometry","CameraComponent","PhysicsSystem","Vec3","math","quat","ccclass","property","Ray","start","ray","on","EventType","TOUCH_END","e","node","getComponent","screenPointToRay","getLocation","x","y","instance","raycast","r","raycastResults","i","length","item","collider","name","console","log","par","worldPosition","hitPoint","play","targetDir","subtract","player","rad","angle","forward","rotate","Quat","fromEuler","move","update","deltaTime","setPosition"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,I,OAAAA,I;AAAiCC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,I,OAAAA,I;;;;;;;OACjK;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBb,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;qBAGac,G,WADZF,OAAO,CAAC,KAAD,C,UAMHC,QAAQ,CAACV,cAAD,C,UAGRU,QAAQ,CAACX,IAAD,C,oCATb,MACaY,GADb,SACyBb,SADzB,CACmC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,uCAWZ,IAXY;;AAAA,6CAcnB,IAAIQ,IAAJ,EAdmB;;AAAA,wCAexB,KAfwB;AAAA;;AAgB/BM,QAAAA,KAAK,GAAI;AACL;AAEA,eAAKC,GAAL,GAAW,IAAIV,QAAQ,CAACQ,GAAb,EAAX;AACAV,UAAAA,WAAW,CAACa,EAAZ,CAAeZ,WAAW,CAACa,SAAZ,CAAsBC,SAArC,EAA+CC,CAAC,IAAE;AAC9C,iBAAKC,IAAL,CAAUC,YAAV,CAAuBf,eAAvB,EAAwCgB,gBAAxC,CAAyDH,CAAC,CAACI,WAAF,GAAgBC,CAAzE,EAA2EL,CAAC,CAACI,WAAF,GAAgBE,CAA3F,EAA8F,KAAKV,GAAnG;;AACA,gBAAIR,aAAa,CAACmB,QAAd,CAAuBC,OAAvB,CAA+B,KAAKZ,GAApC,CAAJ,EAA8C;AAC1C,oBAAMa,CAAC,GAAGrB,aAAa,CAACmB,QAAd,CAAuBG,cAAjC;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,sBAAME,IAAI,GAAGJ,CAAC,CAACE,CAAD,CAAd;;AACA,oBAAIE,IAAI,CAACC,QAAL,CAAcb,IAAd,CAAmBc,IAAnB,IAA2B,SAA/B,EAA0C;AACtCC,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,uBAAKC,GAAL,CAASjB,IAAT,CAAckB,aAAd,GAA8BN,IAAI,CAACO,QAAnC;AACA,uBAAKF,GAAL,CAASG,IAAT;AACA,uBAAKC,SAAL,GAAiBT,IAAI,CAACO,QAAL,CAAcG,QAAd,CAAuB,KAAKC,MAAL,CAAYL,aAAnC,CAAjB;AACA,sBAAIM,GAAG,GAAGpC,IAAI,CAACqC,KAAL,CAAW,KAAKJ,SAAhB,EAA0B,KAAKE,MAAL,CAAYG,OAAtC,CAAV;AACA,uBAAKH,MAAL,CAAYI,MAAZ,CAAmBtC,IAAI,CAACuC,IAAL,CAAUC,SAAV,CAAoBvC,IAAI,EAAxB,EAA4B,CAA5B,EAA8BkC,GAA9B,EAAkC,CAAlC,CAAnB;AACA,uBAAKM,IAAL,GAAY,IAAZ;AACH;AACJ;AACJ;AAEJ,WAnBD,EAmBE,IAnBF;AAoBH;;AAEDC,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AACvB,cAAG,KAAKF,IAAR,EACA;AACI,iBAAKP,MAAL,CAAYU,WAAZ,CAAyB,KAAKhB,GAAL,CAASjB,IAAT,CAAckB,aAAvC,EADJ,CAGI;AACH;AAEJ;;AAlD8B,O;;;;;iBAMV,I;;;;;;;iBAGP,I;;;AA4ClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, ParticleSystem, systemEvent, SystemEvent, geometry, CameraComponent, PhysicsSystem, Vec3, Canvas, Camera, RigidBody, math, Vec2, quat } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = Ray\n * DateTime = Fri Oct 29 2021 09:34:06 GMT+0800 (中国标准时间)\n * Author = fywxk\n * FileBasename = ray.ts\n * FileBasenameNoExtension = ray\n * URL = db://assets/scripts/ray.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n \n@ccclass('Ray')\nexport class Ray extends Component {\n    // [1]\n    // dummy = '';\n\n    // [2]\n    @property(ParticleSystem)\n    par:ParticleSystem = null!;\n\n    @property(Node)\n    player:Node = null!;\n\n    ray:geometry.Ray = null;\n    // serializableDummy = 0;\n\n    targetDir = new Vec3();\n    move = false;\n    start () {\n        // [3]\n        \n        this.ray = new geometry.Ray();\n        systemEvent.on(SystemEvent.EventType.TOUCH_END,e=>{\n            this.node.getComponent(CameraComponent).screenPointToRay(e.getLocation().x,e.getLocation().y, this.ray);\n            if (PhysicsSystem.instance.raycast(this.ray)) {\n                const r = PhysicsSystem.instance.raycastResults;\n                for (let i = 0; i < r.length; i++) {\n                    const item = r[i];\n                    if (item.collider.node.name == \"Terrain\") {\n                        console.log(\"点击了地面\");\n                        \n                        this.par.node.worldPosition = item.hitPoint\n                        this.par.play();\n                        this.targetDir = item.hitPoint.subtract(this.player.worldPosition);\n                        let rad = Vec3.angle(this.targetDir,this.player.forward)\n                        this.player.rotate(math.Quat.fromEuler(quat(), 0,rad,0));\n                        this.move = true\n                    }\n                }\n            }\n           \n        },this)\n    }\n\n    update (deltaTime: number) {\n        if(this.move)\n        {\n            this.player.setPosition( this.par.node.worldPosition );\n          \n            // this.player.position.add(ve3);   \n        }\n       \n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}