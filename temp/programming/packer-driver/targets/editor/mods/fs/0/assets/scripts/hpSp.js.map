{"version":3,"sources":["file:///D:/CocosProject/testDemo/cocos3d20211013/20211014/demolist2/assets/scripts/hpSp.ts"],"names":["_decorator","Component","Node","Vec3","CameraComponent","geometry","systemEvent","SystemEvent","PhysicsSystem","ParticleSystem","Quat","tween","SkeletalAnimation","ccclass","property","HpSp","start","node","getComponent","play","ray","Ray","on","EventType","TOUCH_END","touchEnd","e","ca","camerr","screenPointToRay","getLocationX","getLocationY","instance","raycast","arr","raycastResults","i","length","collider","name","par","worldPosition","hitPoint","qut","qut1","qutStart","rotation","dir","subtract","fromViewUp","normalize","tw","to","onUpdate","target","ratio","set","slerp","setRotation","call","move","update","deltaTime","translate","multiplyScalar","dis","distance","ve","uiHp","parent","getWorldPosition","convertToUINode","hp3dNode","setPosition","scale"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Vec3, CameraComponent, geometry, systemEvent, SystemEvent, PhysicsSystem, ParticleSystem, math, quat, Quat, tween, SkeletalAnimation, ConstantForce, RigidBody } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = HpSp\n * DateTime = Fri Oct 29 2021 16:10:01 GMT+0800 (中国标准时间)\n * Author = fywxk\n * FileBasename = hpSp.ts\n * FileBasenameNoExtension = hpSp\n * URL = db://assets/scripts/hpSp.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n\n@ccclass('HpSp')\nexport class HpSp extends Component {\n    // [1]\n    // dummy = '';\n\n    // [2]\n    // @property\n    // serializableDummy = 0;\n\n    @property(Node)\n    uiHp: Node = null; // UI\n\n    @property(Node)\n    hp3dNode: Node = null; // 3d 血条挂点\n\n    @property(Node)\n    camerr: Node = null;\n\n    @property(ParticleSystem)\n    par: ParticleSystem = null;\n\n\n    @property(Node)\n    cube: Node = null;\n\n    move = false;\n\n    ray: geometry.Ray = null;\n    start() {\n        // [3]\n        this.node.getComponent(SkeletalAnimation).play(\"cocos_anim_idle\")\n        this.ray = new geometry.Ray();\n\n        systemEvent.on(SystemEvent.EventType.TOUCH_END, this.touchEnd, this)\n    }\n    touchEnd(e) {\n        // 射线检测碰撞\n        let ca = this.camerr.getComponent(CameraComponent);\n        ca.screenPointToRay(e.getLocationX(), e.getLocationY(), this.ray);\n        if (PhysicsSystem.instance.raycast(this.ray)) {\n            let arr = PhysicsSystem.instance.raycastResults;\n            for (let i = 0; i < arr.length; i++) {\n                if (arr[i].collider.node.name == \"Terrain\") {\n                    // console.log(\"碰撞到地面\",arr[i].hitPoint);\n                    this.par.play();\n                    this.par.node.worldPosition = arr[i].hitPoint;// 粒子位置直接设置过去\n                    const qut = new Quat();\n                    const qut1 = new Quat();\n                    const qutStart = this.node.rotation\n                    const dir = arr[i].hitPoint.subtract(this.node.worldPosition);// 求出到目标点的方向向量\n                    Quat.fromViewUp(qut, dir.normalize(), new Vec3(0, 1, 0))// 计算出目标点的四元数\n                    // tween实现旋转\n                    const tw = tween(this.node);\n                    tw.to(0.2, {}, {\n                        onUpdate: (target, ratio: number) => {\n                            // ratio : 0~1\n                            // 这里使用球面插值，旋转时不会出现变形\n                            qut1.set(qutStart).slerp(qut, ratio)\n                            this.node.setRotation(qut1);\n                        },\n                    }).call(() => {\n                        this.move = true;\n                        this.node.getComponent(SkeletalAnimation).play(\"cocos_anim_run\")\n                    })\n                    tw.start();\n\n                }\n            }\n        }\n    }\n    update(deltaTime: number) {\n        // 开始移动\n        if (this.move) {\n            this.node.translate(new Vec3(0, 0, 1).multiplyScalar(0.1)); // 旋转后 想对于自己本地坐标想自己的前方移动\n            let dis = Vec3.distance(this.node.worldPosition, this.par.node.worldPosition)\n            if (dis <= 0.2) {\n                this.move = false;\n                this.node.getComponent(SkeletalAnimation).play(\"cocos_anim_idle\")\n            }\n        }\n        // 血条跟随\n        let ve = new Vec3(0, 0, 0)\n        this.uiHp.parent.getWorldPosition(ve);\n        let ca = this.camerr.getComponent(CameraComponent);\n        ca.convertToUINode(this.hp3dNode.worldPosition, this.uiHp.parent, ve);\n        this.uiHp.setPosition(ve)\n        // 血条近大远小的效果\n        let dis = Vec3.distance(this.node.worldPosition, this.camerr.worldPosition);\n        if (dis > 10) {\n            this.uiHp.scale = new Vec3(0.02 * (100 / (dis - 10)), 0.02 * (100 / (dis - 10)), 1)\n\n        }\n\n\n        //   let qu = math.quat()\n        //   this.cube.rotate(math.Quat.rotateAround( math.quat(), math.quat(), this.cube.position,0.001))\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}